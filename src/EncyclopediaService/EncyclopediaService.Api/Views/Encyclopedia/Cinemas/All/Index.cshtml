@page "{handler?}"
@using Shared.CinemaDataService.Models.Flags;
@model EncyclopediaService.Api.Views.Encyclopedia.Cinemas.All.IndexModel;
@{
    ViewData["Title"] = "Cinemas";
}
@functions {
    string Star(byte size, float x = 0.0f, float y = 0.0f)
    {

        List<float> xs = new List<float> { 5.0f, 6.5f, 10.0f, 7.5f, 8.0f, 5.0f, 2.0f, 2.5f, 0.0f, 3.5f };
        List<float> ys = new List<float> { 0.0f, 3.5f, 4.0f, 6.5f, 10.0f, 8.0f, 10.0f, 6.5f, 4.0f, 3.5f };

        string points = Enumerable.Zip(xs, ys).Select(p => $"{x + p.First * size},{y + p.Second * size} ").Aggregate((acc, p) => acc + p);

        return points;
    }
}

@{
    int hash = 0;
}

<h1>Cinemas</h1>

<body>
    <div class="container">
        <div class="row mt-4">
            <!-- Collection Grid -->
            <div class="col-md-9">

                <div class="row row-cols-4 row-cols-md-4 row-cols-sm-2">
                    @foreach (var cinema in Model.List)                       
                    {                             
                        <div class="col-3 row-cols-md-3 col-sm-6">                                
                            <div class="card cinema-poster-grid mb-md-4 w-100" style="width:fit-content">
								<a asp-page="/encyclopedia/cinemas/cinema" asp-route-id="@cinema.Id" class="d-flex justify-content-center">
                                    @if (@cinema.Picture != null)
                                    {
                                        <img src="@cinema.PictureUri" class="card-img-top img-fluid" alt="Cinema @(cinema.Name)">
                                    }
                                    else
                                    {
                                        <img class="img img-fluid img-placeholder card-img-top" alt="Cinema @(cinema.Name)">
                                    }
                                </a>							
                                <div class="card-body border-bottom" style="padding-bottom:1rem;">										
                                    <div class="text-truncate">                                            
                                        <h6 class="card-text fw-normal">												
                                            <a class="link-black link-underline-none link-underline-blue-offset-2-hover"                                                   
                                            asp-page="/encyclopedia/cinemas/cinema" asp-route-id="@cinema.Id">@cinema.Name</a>                                            
                                        </h6>										
                                    </div>                                        
                                    <div class="row mt-2">
                                        @{
                                            byte starSize = 2;
                                            const float K = 10;
                                            const float max = 10.0f;
                                        }
                                        <div class="col d-flex align-bottom">
											<svg width="@(starSize*K)" height="@(starSize*K*1.5)" xmlns="http://www.w3.org/2000/svg">
												<defs>
                                                    @{ hash = cinema.Name.GetHashCode(); }
													<clipPath id="cut-star-@hash" class="cut-stars">
														<rect width="@(starSize*K*(cinema.Rating)/max)" height="@(starSize*K*1.5)" x="0" y="0" />
													</clipPath>
												</defs>

												<polygon class="star" points="@Star(starSize)" clip-path="url(#cut-star-@hash)"></polygon>
												<polygon class="star-empty" points="@Star(starSize)"></polygon>

											</svg>
                                            
                                            
										</div>
										<div class="col">
                                            <p class="text-end card-subtitle" style="color:cadetblue;">@(cinema.Year)</p>
                                        </div>
                                    </div>                                 
                                </div>                               
                            </div>                          
                        </div>                       
                    }                        
                </div>

            </div>

            <!-- Filter and Sort Options -->
			<div id="filter-and-sort" class="col-md-3">
                <div class="card">
                    <div  class="card-body">
                        <p class="card-title fs-4">Filter Options</p>
                        <hr/>
                        <form id="filter-options-year" method="get" asp-page="index" asp-page-handler="years">
                            <div class="row row-cols-1 card-group mt-3">
                                <h5 class="card-subtitle col-11 offset-1 mb-2">by year:</h5>

                                @foreach (var year in Model._filterOptions.YearsChoice)
                                {
                                    <div class="form-check col-8 offset-4">
                                        <input class="form-check-input form-submit" type="checkbox" value="@year" id="options-year-@year" name="yearsbind" checked="@(Model._filterOptions.YearsBind.Exists(y => y==year))">
                                        <label class="form-check-label" for="option-year-@year">
                                            @year - @(year < Model._filterOptions.YearsChoice.First() ? year+10 : "later")
                                        </label>
                                    </div>
                                }

                            </div>
                        </form>
                        <p class="text-muted">-----------------------------------</p>
                        <form id="filter-options-genre" method="get" asp-page="index" asp-page-handler="genres">
                            <div class="row row-cols-1 card-group mt-3">
                                <h5 class="card-subtitle col-11 offset-1 mb-2">by genre:</h5>

                                @foreach (var genre in Enum.GetValues<Genre>())
                                {
                                    @if (genre == 0)
                                    {
                                        continue;
                                    }

                                    <div class="form-check col-8 offset-4">
                                        <input class="form-check-input form-submit" type="checkbox" value="@genre" id="options-genre-@genre" name="genresbind" checked="@((Model._filterOptions.GenresBind.Exists(g => g==genre)))">
                                        <label class="form-check-label" for="option-genre-@genre">
                                            @((Genre)genre)
                                        </label>
                                    </div>
                                }

                            </div>
                        </form>
                        <p class="text-muted">-----------------------------------</p>
                        <form id="filter-options-language" method="get" asp-page="index" asp-page-handler="language">
                            <div class="row row-cols-1 card-group mt-3">
                                <h5 class="card-subtitle col-11 offset-1 mb-2">by language:</h5>

                                <div class="form-check col-10 offset-2">
                                    <select class="form-select form-submit" name="languagebind" asp-for="_filterOptions.LanguageBind" asp-items="Html.GetEnumSelectList<Language>()">
                                    </select>
                                </div>

                            </div>
                        </form>
                        <p class="text-muted">-----------------------------------</p>
                        <form id="filter-options-studio" method="get" asp-page="index" asp-page-handler="studios">
                            <div class="row row-cols-1 card-group mt-3">
                                <h5 class="card-subtitle col-11 offset-1 mb-2">by studio:</h5>

                                @foreach (var studio in Model._filterOptions.StudiosChoice)
                                {
                                    <div class="form-check col-8 offset-4">
                                        <input class="form-check-input form-submit" type="checkbox" value="@studio.Id" id="options-studio-@studio" name="studiosdind" checked="@(Model._filterOptions.StudiosBind.Exists(sid => sid == studio.Id))">
                                        <label class="form-check-label" for="option-studio-@studio">
                                            @studio.Name
                                        </label>
                                    </div>
                                }

                            </div>
                        </form>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 text-center">
                        |
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <p class="card-title fs-4">Sort Options</p>
                        <hr/>
                        <form id="sort-options" method="get">
                            <div class="row row-cols-1 card-group mt-3">
                                <h5 class="card-subtitle">Order</h5>
                                <div class="col-12 mt-2 mb-2">
                                    <div class="row">
                                        <div class="form-check col-5 offset-2">
                                            <input class="form-check-input form-submit sort-options-order" type="radio" value="true" name="order" id="asc" checked="@(Model.Order??false)">
                                            <label class="form-check-label" for="asc">
                                                ascending
                                            </label>
                                        </div>
                                        <div class="form-check col-5">
                                            <input class="form-check-input form-submit sort-options-order" type="radio" value="false" name="order" id="dsc" checked="@(!Model.Order??false)">
                                            <label class="form-check-label" for="dsc">
                                                descending
                                            </label>
                                        </div>
                                    </div>
                                </div>
                                <p class="text-muted">-----------------------------------</p>
                                <h5 class="card-subtitle">By</h5>
                                <div class="row mt-2"></div>
                                @foreach (KeyValuePair<string, string> sort in Model._sortOptions.MapToQueryKey)
                                {
                                    <div class="form-check col-8 offset-4">
                                        <input class="form-check-input form-submit sort-options-by" type="radio" value="@sort.Value" name="by" id="sort-@sort.Value" checked="@(sort.Value==Model.By)">
                                        <label class="form-check-label" for="sort-@sort.Value">
                                            @Model._sortOptions.MapToDisplay[sort.Key]
                                        </label>
                                    </div>
                                }
                            </div>
                        </form>

                    </div>
                </div>
            </div>

            <nav aria-label="...">
                <ul id="pages" class="pagination pagination-lg justify-content-end">

                    @{
                        const byte ps = 3;

                        int aft = Model.IsEnd ? 0 : 1;

                        int lid = (Model.PageNum < ps && ((Model.PageNum + aft) < ps)) ? Model.PageNum + aft : ps;

                        int dif = aft - (lid - 1);

                        int n = lid + dif;
                    }

                    <li class="page-item">
                        <a class="page-link" href="@(Model.PageNum<=(ps/2+1) ? null : $"?pageNum={Model.PageNum+dif-1}")" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>

                    @for (int off = dif; off < n; off++)
                    {
                        <li class="page-item page-num @(off==0 ? "active" : "")">
                            <a class="page-link" href="@(off==0 ? "#" : $"?pageNum={Model.PageNum+off}")">@(Model.PageNum + off)</a>
                        </li>
                    }

                    <li class="page-item">
                        <a class="page-link" href="@((Model.IsEnd && Model.PageNum>=(lid - ps/2 - 1)) ? null : $"?pageNum={Model.PageNum+n}")" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>

        </div>
    </div>

    <script src="~/js/index_events.js" asp-append-version="true"></script>

</body>

