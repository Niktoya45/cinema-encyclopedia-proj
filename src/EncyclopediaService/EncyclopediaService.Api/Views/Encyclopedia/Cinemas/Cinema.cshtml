@page "{id}"
@using EncyclopediaService.Api.Extensions;
@using Shared.UserDataService.Models.Flags;
@model EncyclopediaService.Api.Views.Encyclopedia.Cinemas.CinemaModel;
@{
    ViewData["Title"] = "Cinema";

    var Role = User.FindFirst("role");
    bool LoggedIn = User.IsLoggedIn();
    bool IsAdmin = User.IsAdmin();
}
@functions{
    string Star(byte size, float x = 0.0f, float y = 0.0f)
    {

        List<float> xs = new List<float> { 5.0f, 6.5f, 10.0f, 7.5f, 8.0f, 5.0f, 2.0f, 2.5f, 0.0f, 3.5f };
        List<float> ys = new List<float> { 0.0f, 3.5f, 4.0f, 6.5f, 10.0f, 8.0f, 10.0f, 6.5f, 4.0f, 3.5f };

        string points = Enumerable.Zip(xs, ys).Select(p => $"{x + p.First * size},{y + p.Second * size} ").Aggregate((acc, p) => acc + p);

        return points;
    }
}
@section scripts {
    <partial name="_ValidationScriptsPartial" />
}

<body>
    @if(IsAdmin)
    {
        <!-- Edit Main Information Popup -->
        <form-popup id="modal-edit-main" form="form-edit-main" title="Edit main information" lock="true" save-close="false" scroll="true">
            <div class="container-fluid">
                <form id="form-edit-main" asp-page-handler="editCinema" class="trim-inputs" method="post">
                    <partial name="_EditMain" model="Model.EditMain" />
                </form>
            </div>
        </form-popup>

        <!-- Edit Film Poster Popup -->
        <form-popup id="modal-edit-poster" form="form-edit-poster" title="Choose poster picture" lock="true" save-close="true" scroll="true">
            <div class="container-fluid">
                <form id="form-edit-poster" asp-page-handler="editPicture" class="trim-inputs" method="post" enctype="multipart/form-data">        
                    <partial name="_EditPoster" model="Model.EditPoster" />
                </form>
            </div>
        </form-popup>

        <!-- Edit Starring Popup -->
        <form-popup id="modal-edit-starring" form="form-edit-starring" title="Edit starring" size="lg" lock="true" save-close="false" scroll="true">
            <div class="container-fluid">
                <form id="form-edit-starring" asp-page-handler="editStarring" class="trim-inputs" method="post">
                    <partial name="_AddStarring" model="Model.EditStarring" />
                </form>
            </div>
        </form-popup>

        <!-- Add Studio Popup -->
        <form-popup id="modal-add-studio" form="form-add-studio" title="Find and choose new studio" lock="true" save-close="false" scroll="false">
            <div class="container-fluid">
                <form id="form-add-studio" asp-page-handler="addProductionStudio" class="trim-inputs" method="post">
                    <partial name="_AddStudio" model="Model.EditStudio" />
                </form>
            </div>
        </form-popup>

        <!-- Add Starring Popup -->
        <form-popup id="modal-add-starring" form="form-add-starring" title="Find and choose new starring" size="lg" lock="true" save-close="false" scroll="false">
            <div class="container-fluid">
                <form id="form-add-starring" asp-page-handler="addStarring" class="trim-inputs" method="post">
                    <partial name="_AddStarring" model="Model.EditStarring" />
                </form>
            </div>
        </form-popup>

        <form-popup id="modal-delete-element" form="form-delete-element" size="lg" lock="true" save-close="true" scroll="false" add-button="false"  style="border:#333 double 0.5rem">
            <div class="container-fluid">
                <form id="form-delete-element" method="post">
                    <input type="hidden" asp-for="RecordId"/>

                    <div class="d-flex vstack w-100 justify-content-center align-items-center">

                        <p class="label-delete label-cinema no-display fs-4 fw-bold">Delete this cinema page?</p>
                        <p class="label-delete label-starring no-display fs-4 fw-bold">Delete starring record for this cinema page?</p>
                        <p class="label-delete label-studio no-display fs-4 fw-bold">Delete studio record for this cinema page?</p>

                        <div class="d-flex hstack gap-4 h-25 justify-content-center">
                            <div class="d-flex hstack gap-4 h-25 w-50" style="width:80%;margin-top:6rem">
                                <button value="delete" type="submit" class="btn btn-secondary w-50" data-bs-dismiss="modal">Delete</button>
                                <button value="cancel" type="submit" class="btn btn-secondary w-50" data-bs-dismiss="modal">Cancel</button>
                            </div>
                        </div>

                    </div>

                </form>
            </div>
        </form-popup>
    }


    @if(!LoggedIn)
    {
        <form-popup id="modal-login" form="form-login" size="lg" lock="true" save-close="true" scroll="false" add-button="false" style="border:black double 0.5rem">
            <div class="container-fluid">

                    <div class="d-flex vstack w-100 justify-content-center align-items-center">

                        <p class="fs-4 fw-bold">This action requires you to login</p>
                        <p class="fs-3 fw-bold mt-3">Proceed to login?</p>

                        <div class="d-flex hstack gap-4 h-25 justify-content-center">
                            <div class="d-flex hstack gap-4 h-25" style="width:80%;margin-top:6rem">
                                <form id="form-login" action="@(Url.PageLink("/Index", "Login", new {redirect = $"/encyclopedia/cinemas/{Model.Id}"}))" method="get" class="w-50">
                                <button value="login" type="submit" class="btn btn-dark w-100" data-bs-dismiss="modal">Login</button>
                                </form>
                                <button value="cancel" type="submit" class="btn btn-secondary w-50" data-bs-dismiss="modal">Cancel</button>
                            </div>
                        </div>

                    </div>

            </div>
        </form-popup>        
    }



    <h1>Cinema</h1>
    <div class="container mt-5" style="margin-bottom:6rem">

        <div class="row">

            <div class="col-md-9 offset-md-1">
                <h1 class="display-5">@Model.Cinema.Name</h1>
            </div>

            <div class="col-md-2">

                @if(IsAdmin)
                {
                        <div class="editor dropdown">
                            <button id="dropdown-edit-cinema" type="button" style="border:none;background-color:transparent;" data-bs-toggle="dropdown" aria-expanded="false">
                                <span class="icon icon-md icon-options-dots"></span>
                            </button>

                            <ul class="dropdown-menu mt-2" aria-labelledby="dropdown-edit-cinema">
                                <li>
                                    <button class="show-editor-options dropdown-item">
                                        Edit
                                    </button>
                                </li>

                                <li>
                                    <button class="dropdown-item" value="@Model.Id"
								    data-bs-target="#modal-delete-element" data-bs-toggle="modal" href="#">
									    Delete
								    </button>
                                </li>
                            </ul>

                        </div>

                        <div class="hide-editor-options editor hide-close-buttons">
                            <button class="btn btn-secondary">
                                Cancel
                            </button>
                        </div>
                }

            </div>

        </div>

        <div class="row">
            <div class="col-md-7 offset-md-5">
                @{
                    byte starSize = 5;
                    const byte starCount = 10;
                    float starSpan = 1;
                    const float K = 10;
                }

                <svg width="@(((starSize+starSpan)*starCount-starSpan)*K)" height="@(starSize*K*1.5)" xmlns="http://www.w3.org/2000/svg">
                    <defs>
                        <clipPath id="cut" class="cut-stars">
                            <rect width="@(((starSize+starSpan)*starCount-starSpan)*K*(Model.Cinema.RatingScore)/starCount)" height="@(starSize*K*1.5)" x="0" y="0" />
                        </clipPath>
                    </defs>

                    @for (byte i = 0; i < starCount; i++)
                    {
                        <polygon class="star" points="@Star(starSize, i*(starSize+starSpan)*K)" clip-path="url(#cut)"></polygon>
                        <polygon class="star-empty" points="@Star(starSize, i*(starSize+starSpan)*K)"></polygon>
                    }
                </svg>
                <button id="rating" type="button" class="fs-3 fw-bold" data-bs-toggle="dropdown" data-bs-target="#collapse-stars" aria-expanded="false">
                    @Model.Cinema.RatingScore
                </button>
                <div class="dropdown-menu align-items-center" id="collapse-stars" aria-labelledby="rating">
                    <div>
                        @{
                            starSize = 3;
                            starSpan = 0.6f;
                        }

                        <form id="rate-cinema" asp-page-handler="@(LoggedIn ? "Rate" : "")" class="@(LoggedIn ? "" : "login-proceed")" method="post">
                            <input type="hidden" asp-for="UserScore" value="@(Model.UserScore)"/>
                            @for (byte i = 0; i < starCount; i++)
                            {
                                <button class="rail" value="@(i+1)" @(LoggedIn ? "" : "data-bs-target=#modal-login data-bs-toggle=modal" )
                                    style="background:none;border:none;padding:0;width:auto;text-decoration:none">
                                    <svg width="@((starSize+starSpan)*K)" height="@(starSize*K*1.5)" xmlns="http://www.w3.org/2000/svg">
                                        <polygon class="star @(Model.UserScore < i+1 ? "rail" : "")" points="@Star(starSize, 0)" ></polygon>
                                        <polygon class="star-empty" points="@Star(starSize, 0)"></polygon>
                                    </svg>
                                </button>

                            }
                        </form>

                    </div>
                </div>
            </div>
        </div>

        <hr>
        <div class="row"></div>

        <div class="row">

            <!-- Film Poster Block -->
            <div class="col-md-4 offset-1 position-relative">

                <!-- Film Poster -->
                <div class="col-md-10 cinema-poster">
                    <div class="row">
                        @if (Model.Cinema.Picture != null)
                        {
                            <img src="@(Model.Cinema.PictureUri)" class="img img-fluid" alt="Poster Image">
                        }
                        else
                        {
                            <img class="img img-fluid img-placeholder ignore" alt="Poster Image">
                        }
                    </div>
                    <div class="row labels-block @(LoggedIn ? "" : "login-proceed")">

                        <div class="col mt-3 mb-1">
                            <button title="favorite" @(LoggedIn ? "" : "data-bs-target=#modal-login data-bs-toggle=modal" )
                                class="@((Model.UserLabel & Label.Favored) == Label.None ? "" : "active") btn-refresh btn-label" value="@((byte)Label.Favored)">
                                <svg id="heart" class="label-icons" width="36" height="36" xmlns="http://www.w3.org/2000/svg">
                                    <polygon points="18,12 23,7 26,7 31,12 31,17 27,24 19,30 16,30 8,24 4,17 4,12 9,7 12,7 17,12" />
                                </svg>
                            </button>

                            <button id="label-options-toggle" title="mark as.." type="button" value="@((byte)Label.None)"
                                    data-bs-toggle="collapse" data-bs-target="#collapse-labels" aria-expanded="false" aria-controls="collapse-labels">

                                <svg id="pencil" class="label-icons" width="36" height="36" xmlns="http://www.w3.org/2000/svg">

                                    <line x1="1" x2="16" y1="31" y2="24"></line>
                                    <line x1="2" x2="2" y1="31" y2="32" stroke-width="3"></line>
                                    <line x1="1" x2="7" y1="31" y2="16"></line>
                                    <line x1="15" x2="8" y1="23" y2="16"></line>
                                    <line x1="15" x2="31" y1="24" y2="10"></line>
                                    <line x1="5" x2="24" y1="19" y2="2"></line>
                                    <line x1="31" x2="24" y1="10" y2="2"></line>
                                    <line x1="18" x2="26" y1="7" y2="16"></line>

                                </svg>

                            </button>

                            <div id="collapse-labels-body">
                                <div id="collapse-labels" class="collapse collapse-horizontal">
                                    <div id="labels" class="card card-body hstack">
                                        <button title="planned" @(LoggedIn ? "" : "data-bs-target=#modal-login data-bs-toggle=modal" )
                                            class="@((Model.UserLabel & Label.Planned) == Label.None ? "" : "active")"  value="@((byte)Label.Planned)">
                                            <svg id="clock" class="label-icons" width="36" height="36" xmlns="http://www.w3.org/2000/svg">
                                                <polygon class="empty" points="15,3 10,5 5,10 4,13 4,20 5,23 9,28 15,31 20,31 26,28 30,23 31,20 31,13 30,10 25,5 20,3" />
                                                <line class="thin" x1="17" x2="17" y1="17" y2="9"></line>
                                                <line class="thin" x1="17" x2="22" y1="17" y2="22"></line>
                                                <line x1="16" x2="18" y1="17" y2="17" stroke-width="3"></line>
                                            </svg>
                                        </button>
                                        <button title="watching" @(LoggedIn ? "" : "data-bs-target=#modal-login data-bs-toggle=modal" )
                                            class="@((Model.UserLabel & Label.Watching) == Label.None ? "" : "active")"  value="@((byte)Label.Watching)">
                                            <svg id="monitor" class="label-icons" width="36" height="36" xmlns="http://www.w3.org/2000/svg">
                                                <polygon class="empty" points="7,4 4,7 4,23 7,26 28,26 31,23 31,7 28,4" />
                                                <polygon points="12,10 10,12 10,18 12,20  23,20 25,18 25,12 23,10" />
                                                <line class="thin" x1="14" x2="21" y1="27" y2="27" />
                                                <line x1="10" x2="25" y1="30" y2="30" />
                                            </svg>
                                        </button>
                                        <button title="seen" @(LoggedIn ? "" : "data-bs-target=#modal-login data-bs-toggle=modal" )
                                            class="@((Model.UserLabel & Label.Seen) == Label.None ? "" : "active")"  value="@((byte)Label.Seen)">
                                            <svg id="eye" class="label-icons" width="36" height="36" xmlns="http://www.w3.org/2000/svg">
                                                <polygon class="empty" points="14,4 9,6 6,11 4,14 4,19 5,22 8,26 11,28 14,29 20,29 23,28 26,26 29,22 30,19 30,13 29,11 25,6 20,4" />
                                                <polygon points="17,7 20,12 21,13 23,14 27,14 27,16 27,17 25,9" />
                                                <polygon points="17,27 20,22 21,21 23,20 27,20 27,17 27,19 25,25" />
                                                <polygon points="17,27 14,22 13,21 11,20 7,20 7,17 7,19 10,25" />
                                                <polygon points="17,7 14,12 13,13 11,14 7,14 7,16 7,17 10,9" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>

                <!-- Film Poster Options -->
                <div class="col-md-2 position-absolute end-0 top-0">
                    @if (IsAdmin)
                    {
                        <div class="editor editor-toggle dropdown">
                            <button id="dropdown-edit-poster" type="button" style="border:none;background-color:transparent;" data-bs-toggle="dropdown" aria-expanded="false">
                                <span class="icon icon-md icon-options-dots"></span>
                            </button>

                            <ul class="dropdown-menu mt-2" aria-labelledby="dropdown-edit-poster">
                                <li>
                                    <a class="dropdown-item" data-bs-target="#modal-edit-poster" data-bs-toggle="modal" href="#">Replace picture</a>
                                </li>
                            </ul>

                        </div>
                    }
                </div>

            </div>



            <div class="col-md-7">
                <div class="row">

                    <div class="col-md-6 position-relative">

                        <!-- Main Object Information -->
                        <div class="col-md-10">
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item list-group-item-secondary mb-4 border-bottom shadow-sm fs-5">Released on</li>
                                <li class="list-group-item mb-4 border-bottom border-info fs-5">@(Model.Cinema.ReleaseDate.ToString("dd-MMM-yyyy"))</li>

                                <li class="list-group-item list-group-item-secondary mb-4 border-bottom shadow-sm fs-5">Language of origin</li>
                                <li class="list-group-item mb-4 border-bottom border-info fs-5">@(Model.Cinema.Language == 0 ? " - " : Model.Cinema.Language.ToString())</li>

                                <li class="list-group-item list-group-item-secondary mb-4 border-bottom shadow-sm fs-5">Genres</li>
                                <li class="list-group-item mb-4 border-bottom border-info fs-5">@string.Join(" | ", Model.Cinema.Genres.BreakGenresFlag())</li>
                            </ul>
                        </div>

                        <!-- Main Object Information Options -->
                        <div class="col-md-2 position-absolute end-0 top-0">
                            @if (IsAdmin)
                            {
                                <div class="editor editor-toggle dropdown">
                                    <button id="dropdown-edit-main" type="button" style="border:none;background-color:transparent;" data-bs-toggle="dropdown" aria-expanded="false">
                                        <span class="icon icon-md icon-options-dots"></span>
                                    </button>

                                    <ul class="dropdown-menu mt-2" aria-labelledby="dropdown-edit-main">
                                        <li><a class="dropdown-item" data-bs-target="#modal-edit-main" data-bs-toggle="modal" href="#">Edit information</a></li>
                                    </ul>
                                </div>
                            }
                        </div>

                    </div>


                    <div class="col-md-6 position-relative">

                        <!-- Present Studios -->
                        <div class="col-md-10">
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item list-group-item-secondary mb-4 border-bottom shadow-sm fs-5">Studios</li>
                            </ul>
                            <div class="row row-cols-2 studios-block">
                                @if (Model.Cinema.ProductionStudios != null)
                                {
                                    @foreach (var studio in Model.Cinema.ProductionStudios)
                                    {
                                        <partial name="_StudioLogoCard" model="studio" />
                                    }
                                }
                            </div>
                        </div>

                        <!-- Present Studios Options -->
                        <div class="col-md-2 position-absolute end-0 top-0">
                            @if (IsAdmin)
                            {
                                <div class="editor editor-toggle dropdown">
                                    <button id="dropdown-edit-studios" type="button" style="border:none;background-color:transparent;" data-bs-toggle="dropdown" aria-expanded="false">
                                        <span class="icon icon-md icon-options-dots"></span>
                                    </button>

                                    <ul class="dropdown-menu mt-2" aria-labelledby="dropdown-edit-studios">
                                        <li><a class="dropdown-item" data-bs-target="#modal-add-studio" data-bs-toggle="modal" href="#">Add</a></li>
                                        <li><a id="delete-studio" class="dropdown-item show-close-buttons">Delete</a></li>
                                    </ul>
                                </div>
                                <a id="delete-studio-cancel" class="btn hide-close-buttons" hide-show-toggled-by="delete-studio">Cancel</a>
                            }
                        </div>

                    </div>



                </div>
            </div>

        </div>

        <!-- Description block -->
        <hr>
        <div class="row">
            <ul class="list-group list-group-flush">
                <li class="list-group-item list-group-item-secondary mb-4 border-bottom shadow-sm fs-5">Description</li>
                <li class="list-group-item mb-8 border-bottom shadow-sm fs-5">
                    @(Model.Cinema.Description??"")
                </li>
            </ul>
        </div>

        <!-- Starring Block -->
        <hr>
        <div class="row border-bottom">
            <ul class="list-group list-group-flush">
                <li class="list-group-item list-group-item-secondary mb-4 border-bottom shadow-sm fs-5">
                    <div class="row">

                        <div class="col-md-11">
                            <span>Starring</span>
                        </div>

                        <div class="col-md-1">
                            @if(IsAdmin)
                            { 
                                <button class="editor editor-toggle button-add-starring" data-bs-target="#modal-add-starring" data-bs-toggle="modal" type="button" style="border:none;background-color:transparent;" aria-expanded="false">
                                    <p class="icon icon-md icon-plus"></p>
                                </button> 
                            }

                        </div>
                    </div>

                </li>
            </ul>

            <!-- Carousel Block -->
            <div class="row carousel-row">

                <div id="carousel-starrings" class="carousel slide" data-bs-interval="false" data-bs-touch="false">

                    <div class="col-1 text-bg-dark"></div>

                    @{
                        int k = 5;
                        int l = (Model.Cinema.Starrings == null ? 0 : Model.Cinema.Starrings.Length );
                        int m = l / k;
                        int L = m * k;                    
                    }

                    <div class="col-10 offset-1">
                        <div class="carousel-inner">

                            @if (l != 0)
                            {
                                <!-- Carousel Items -->
                                @for (int i = 0; i < L + k; i += k)
                                {
                                    <div class="@(i==0? "carousel-item active" : "carousel-item")">
                                        <div class="row row-cols-@k carousel-page">
                                            @for (int j = i; j < i + k; j++)
                                            {
                                                @if (j == l)
                                                {
                                                    i = L + k;
                                                    break;
												}

												<div id="@Model.Cinema.Starrings![j].Id" class="col carousel-card">
													<form id="update-edit-starring-@Model.Cinema.Starrings[j].Id" asp-page-handler="ReuseEditStarring" method="post">
														<partial name="_StarringCard" model="Model.Cinema.Starrings[j]" />
													</form>
												</div>
											}
										</div>
									</div>
								}

							}
						</div>
					</div>


					<div class="col-1 text-bg-dark"></div>

					<!-- Slide Buttons -->
					<button class="carousel-button carousel-control-prev @(l > k-1 ? "" : "no-display")" type="button" data-bs-target="#carousel-starrings" style="background-color:lightgrey;width:40px" data-bs-slide="prev">
						<span class="carousel-control-prev-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Previous</span>
					</button>
					<button class="carousel-button carousel-control-next @(l > k-1 ? "" : "no-display")" type="button" data-bs-target="#carousel-starrings" style="background-color:lightgrey;width:40px" data-bs-slide="next">
						<span class="carousel-control-next-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Next</span>
					</button>

				</div>

			</div>
		</div>

	</div>


	<script src="~/js/cinema_events.js" asp-append-version="true" type="module"></script>
    

</body>
